#include <iostream>
#include <vector>

int A[100000];
int main(){
    //(13398)
    //n개의 정수로 이루어진 임의의 수열이 주어진다.
    //우리는 이 중 연속된 몇개의 수를 선택해서 구할 수 있는 합 중 가장 큰 합을 구하려고 한다.
    //단, 수는 한 개 이상 선택해야 한다.
    //또 수열에서 수 하나를 제거할 수 있다.
    //(제거하지 않아도 된다.)
    //ex> 10 -4 3 1 5 6 -35 12 21 -1 
    // 수를 제거하지 않았을 때 :: 12 + 21 = 33
    // 수를 제거 하였을 때 (-35제거) :: 10 - 4 + 3 + 1 + 5 + 6 + 12 + 21 = 54 

    //바이토닉 수열 찾기 방법 활용.
    int N;
    std::cin>>N;
    for(int i=0;i<N;i++){
        std::cin>>A[i];
    }

    std::vector<int> D1(N);
    std::vector<int> D2(N);

    //처음부터 끝까지 수열을 더하여 나오는 최대값들을 구한다.
    for(int i=0;i<N;i++){
        //초기값:: 수열의 처음 멤버가 됐을때의 값을 넣어줌
        D1[i]=A[i];
        if(i==0) continue;
        //수열의 멤버가 되는 값이 크다면 넣어준다.
        if(D1[i]<D1[i-1]+A[i]){
            D1[i]=D1[i-1]+A[i];
        }
    }
    //끝부터 처음까지 수열을 더하여 나오는 최대값들을 구한다.
    for(int i=N-1;i>=0;i--){
        //초기값:: 수열의 처음 멤버가 됐을 때의 값을 넣어줌
        D2[i]=A[i];
        if(i==N-1) continue;
        if(D2[i]<D2[i+1]+A[i]){
            //수열의 멤버가 되는 값이 크다면 넣어준다.
            D2[i]=D2[i+1]+A[i];
        }
    }
    int ans=0;
    ans=D1[0];

    for(int i=1;i<N;i++){
        if(ans<D1[i]){
            //초기값을 넣어줌
            ans=D1[i];
        }
    }

    for(int i=1;i<N-1;i++){
        //중간에 특정 수를 하나 뺀 후 수열을 이었을 때의 최대값을 넣어준다.
        if(ans<D1[i-1]+D2[i+1]){
            ans=D1[i-1]+D2[i+1];
        }
    }
    std::cout<<ans<<'\n';
    return 0;
}