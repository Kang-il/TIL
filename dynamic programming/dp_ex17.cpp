#include <iostream>

int DP[100001][3];
//0 번방 :: 마지막 우리에 사자를 넣지 않는 경우
//1 번방 :: 마지막 우리에 사자 한마리를 왼쪽 방에 넣는 경우
//2 번방 :: 마지막 우리에 사자 한마리를 오른쪽 방에 넣는 경우
const int MOD = 9901;
int main(){
    //(1309)
    //동물원 
    // 동물원에 가로로 두 칸 세로로 N칸인 우리가 있다.
    // 이 동물원에 사자들이 살고 있는데 사자들을 우리에 가둘 때, 가로로도 세로로도 붙어있게 배치할 수는 없다.
    // 2*N 배열에 사자를 배치하는 경우의 수가 몇 가지 인지를 알아내는 프로그램을 작성해 주도록하자.

    // 사자를 한 마리도 배치하지 않는 경우도 하나의 경우의 수로 친다고 가정한다.
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(nullptr);
    std::cout.tie(nullptr);

    int N;
    std::cin>>N;

    DP[1][0]=1;
    DP[1][1]=1;
    DP[1][2]=1;

    for(int i=2;i<=N;i++){
        //마지막방에 사자를 넣지 않으면 이전 방에 넣지않든 왼쪽에 넣든 오른쪽에 넣지않든 상관없으므로
        //이전 우리의 모든 경우의 수를 더해준다.
        DP[i][0]=(DP[i-1][0]+DP[i-1][1]+DP[i-1][2])%MOD;
        //마지막 방에 사자를 왼쪽에 넣는다면 이전 방엔 사자를 넣지않거나 오른쪽 방에만 넣을 수 있으므로
        //이전 우리에 사자를 넣지않는 경우와 오른쪽방에만 넣는 경우를 더해준다.
        DP[i][1]=(DP[i-1][0]+DP[i-1][2])%MOD;
        //마지막 방에 사자를 오른쪽에 넣는다면 이전방엔 사자를 넣지 않거나 왼쪽 방에만 넣을 수 있으므로
        //이전 우리에 사자를 넣지않는 경우와 왼쪽 방에만 사자를 넣는 경우를 더해준다.
        DP[i][2]=(DP[i-1][0]+DP[i-1][1])%MOD;
    }

    std::cout<<(DP[N][0]+DP[N][1]+DP[N][2])%MOD<<'\n';
    return 0;
}